{"mappings":"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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseImage.js","node_modules/ol/src/renderer/canvas/ImageLayer.js","node_modules/ol/src/layer/Image.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Image.js","node_modules/ol/src/source/Image.js","node_modules/ol/src/source/WMSServerType.js","node_modules/ol/src/uri.js","node_modules/ol/src/source/ImageWMS.js","node_modules/ol/src/string.js","index.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/Source.js\").default|undefined} source Source being rendered (only for multi-source layers).\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      if (!layer.getRenderer().ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      this.renderComplete_\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        let projection = viewState.projection;\n        if (!ENABLE_RASTER_REPROJECTION) {\n          const sourceProjection = imageSource.getProjection();\n          if (sourceProjection) {\n            projection = sourceProjection;\n          }\n        }\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image && this.loadImage(image)) {\n          this.image_ = image;\n        } else {\n          this.image_ = null;\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const size = frameState.size;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    let width = Math.round(size[0] * pixelRatio);\n    let height = Math.round(size[1] * pixelRatio);\n    const rotation = viewState.rotation;\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(\n        img,\n        0,\n        0,\n        +img.width,\n        +img.height,\n        Math.round(dx),\n        Math.round(dy),\n        Math.round(dw),\n        Math.round(dh)\n      );\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./State.js\").default} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate: interpolate,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (\n          this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)\n        ) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection,\n        projection,\n        extent,\n        resolution,\n        pixelRatio,\n        function (extent, resolution, pixelRatio) {\n          return this.getImageInternal(\n            extent,\n            resolution,\n            pixelRatio,\n            sourceProjection\n          );\n        }.bind(this),\n        this.getInterpolate()\n      );\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis',\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [opt_options] ImageWMS options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      interpolate: interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ =\n      /** @type {import(\"./WMSServerType.js\").default|undefined} */ (\n        options.serverType\n      );\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestHeight = ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","import 'ol/ol.css';\n\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport ImageLayer from 'ol/layer/Image';\nimport OSM from 'ol/source/OSM';\nimport ImageWMS from 'ol/source/ImageWMS';\nimport { fromLonLat } from 'ol/proj';\n\nconst osmLayer = new TileLayer({\n  source: new OSM()\n});\n\nconst countriesLayer = new ImageLayer({\n  name: 'Countries',\n  source: new ImageWMS({\n    url: `${window.location.protocol}//${window.location.host}/geoserver/wms`,\n    params: {\n      'LAYERS': 'FOSSGIS:COUNTRIES'\n    },\n    serverType: 'geoserver',\n    crossOrigin: 'anonymous'\n  })\n});\n\nconst map = new Map({\n  layers: [\n    osmLayer,\n    countriesLayer\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([0, 0]),\n    zoom: 0\n  })\n});\n\nmap.on('singleclick', evt => {\n  document.getElementById('info').innerHTML = '';\n\n  const view = map.getView();\n  const viewResolution = view.getResolution();\n  const url = countriesLayer.getSource().getFeatureInfoUrl(\n    evt.coordinate,\n    viewResolution,\n    view.getProjection(),\n    {\n      'INFO_FORMAT': 'text/html'\n    }\n  );\n\n  if (url) {\n    fetch(url)\n      .then(response => response.text())\n      .then(html => {\n        openNav();\n        document.getElementById('info').innerHTML = html;\n      });\n  }\n});\n\nconst openNav = () => {\n  document.getElementById('info-drawer').style.width = '25%';\n};\n\nconst closeNav = () => {\n  document.getElementById('info-drawer').style.width = '0';\n};\n\ndocument.getElementsByClassName('close-btn')[0].addEventListener('click', closeNav);\n"],"names":["$3273ed08087da3da$export$2e2bcd8739ae039","Disposable","this","disposed","prototype","dispose","disposeInternal","$b998d41b678ed5d1$export$4e734a3b32fb971b","a","b","$b998d41b678ed5d1$export$8a3786cc03fdb777","arr","target","direction","n","length","i","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","Array","isArray","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$6c5e11070e371322$export$817eb92a8194bab0","Error","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","obj","ol_uid","String","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","indexOf","$67c66761d21428d0$export$39dfd62a25e0fe93","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$40658b5e833b516b$export$2e2bcd8739ae039","_super","AssertionError","code","_this","message","split","call","name","$40658b5e833b516b$var$__extends","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$exports","default","$e22e7611e69f42a9$var$transformStringDiv","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","transform","coordinate","x","y","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","source","mat","det","c","d","e","f","$e22e7611e69f42a9$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$2f35615121725455$export$2e2bcd8739ae039","$dab4245bc22b806c$export$2e2bcd8739ae039","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","extent","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","ii","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$cbe64c389534206f","dx","dy","$6da4c8ed3074c92b$export$ac68c24d37ca240f","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","opt_extent","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$30570204156ffd18","flatCoordinates","offset","end","stride","$6da4c8ed3074c92b$export$f1dab130b92b85a9","min","max","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","callback","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$520c40045967cb15","area","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$a1cfd206661d0801","corner","$6da4c8ed3074c92b$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$6da4c8ed3074c92b$var$_boundingExtentXYs","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","value","$6b000a049d919fe5$export$2e2fd1ad24e4d350","cosh","exp","$6b000a049d919fe5$export$b9fae0bba9d9094d","log2","log","LOG2E","$6b000a049d919fe5$export$251bb0a9cef172e6","t","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","PI","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","r","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$6b000a049d919fe5$export$a81f732198733497","decimals","factor","pow","round","$6b000a049d919fe5$export$2077e0241d6afd3c","$6b000a049d919fe5$export$a3fe094919f356fd","floor","$6b000a049d919fe5$export$803ce6b71a0a94b2","ceil","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","color","g","undefined","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$322346e1ff7894ca$export$3004f64547af360e","s","hasOwnProperty","key","exec","hasAlpha","parseInt","substr","$322346e1ff7894ca$export$a3295358bff77e","slice","map","Number","$322346e1ff7894ca$var$fromStringInternal_","$322346e1ff7894ca$export$75093a47a9fa838d","$f351daabfe6e2d22$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$f351daabfe6e2d22$var$getKey","set","setSize","maxCacheSize","$f351daabfe6e2d22$export$747ccdf771a87ab8","$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$e881b5dca21eb5d4$export$2e2bcd8739ae039","$beaefe87199bb537$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","arguments","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","$beaefe87199bb537$export$dd1bc94b04021eeb","$08c28d22c0cb5a39$export$2e2bcd8739ae039","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$294047c5e65f31a3$export$2e2bcd8739ae039","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$1f093ab5083c8a1f$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$1f093ab5083c8a1f$var$__extends","changed","getRevision","len","ol_key","$1f093ab5083c8a1f$export$b7ef3f8527533384","$08c28d22c0cb5a39$exports","$1f093ab5083c8a1f$export$2e2bcd8739ae039","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","oldValue","$b68b3d6e32e3074a$var$__extends","$b68b3d6e32e3074a$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$1f093ab5083c8a1f$exports","$f6d1853b3fcae320$export$2e2bcd8739ae039","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer","background_","background","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$57c5f0299cb9b82f$var$__extends","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$b68b3d6e32e3074a$exports","$f5e92a4d985a2824$export$2e2bcd8739ae039","$98f5bfe3c4864f05$export$2e2bcd8739ae039","$534f30fce11effcd$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$534f30fce11effcd$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$57c5f0299cb9b82f$exports","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","$1bd0a226f9a16141$export$bb628a54ab399bc9","cosAngle","sinAngle","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","projection","opt_sourceExtentWidth","projectionExtent","worldsAway","canWrapX","sourceExtentWidth","$b370ab32454a96fd$var$MapRenderer","MapRenderer","map_","$b370ab32454a96fd$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","worldWidth","$1bd0a226f9a16141$export$39a9ce3624977b84","offsets","layerStates","numLayers","matches","tmpCoord","i1","j","layer1","$534f30fce11effcd$exports","inView","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$b370ab32454a96fd$var$expireIconCache","$b370ab32454a96fd$export$2e2bcd8739ae039","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$b80dddceb0c42ad4$var$__extends","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","$d4aabc5c971073f1$export$1d36981fcadac93b","console","warn","$d4aabc5c971073f1$var$measureFont","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","$d4aabc5c971073f1$var$measureText","measureText","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","$ce07df6d5d4656f1$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","event_1","$b80dddceb0c42ad4$exports","declutterLayers","previousElement","layerIndex","sourceState","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$075f937d7366f1a2$export$caeacfe04f52533a","display","getDataAtPixel","$b370ab32454a96fd$exports","$161dd067fe2d672c$export$2e2bcd8739ae039","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$0b703156bb914e6f$export$2f5ff21d758d25a7","$0b703156bb914e6f$var$__extends","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$931ffc4e747c14db$exports","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent","$3a171922c3a0c5ed$var$__extends","$a1b91f073c6a6c43$var$MapBrowserEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$a1b91f073c6a6c43$var$__extends","getEventPixel","getCoordinateFromPixel","$3a171922c3a0c5ed$exports","$a1b91f073c6a6c43$export$2e2bcd8739ae039","$150f412a4a7fa263$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$d564567e31203d44$export$2e2bcd8739ae039","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent1","$a1b91f073c6a6c43$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","$07fa325567004bb7$export$2e2bcd8739ae039","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b8291d9739c3c64e$export$2e2bcd8739ae039","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$419865bd7211e6e7$export$2e2bcd8739ae039","$03edbd434a9e6608$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","$03edbd434a9e6608$export$2e2bcd8739ae039","$7d362782b4ccb93d$export$2e2bcd8739ae039","$d35baefbe89be4c5$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection","point","$84ad988f04807ab1$var$__extends","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$e16d8520af44a096","destination","sourceCode","destinationCode","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$9c4744460e43e41b$var$showCoordinateWarning","$9c4744460e43e41b$export$ed949affbc7c4223","opt_disable","$9c4744460e43e41b$export$dd516654c5f598fb","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$f5ec5c943d804ecb$export$e16d8520af44a096","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","replace","$9c4744460e43e41b$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$9c4744460e43e41b$export$e3c4995a701c26a3","vertices","$9c4744460e43e41b$export$eeb8392580a05a37","projections","$9c4744460e43e41b$export$638ad73f7aafb913","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$11b5dd198626e1de$export$3988ae62b71be9a3","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$51186ad6e864892a","$9c4744460e43e41b$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","$9c4744460e43e41b$export$494be3a3a25689ca","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$c7ccf7e681a9b333$export$929e5a82286172a6","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$84ad988f04807ab1$exports","PROJECTIONS","$b58ae362632b32c5$exports","fromEPSG4326","toEPSG4326","$42282ac5c8474df1$export$2e2bcd8739ae039","$14c6e714516e527b$export$b92b2dedcfff79de","opt_dest","dest","$50db89a00eb954f6$var$tmpTransform","$50db89a00eb954f6$var$Geometry","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$50db89a00eb954f6$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$6da4c8ed3074c92b$export$6a4fe494c558c238","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$50db89a00eb954f6$export$2e2bcd8739ae039","$c76e993e57efc8c4$export$6af0c1b4a8549a43","layout","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry","$c76e993e57efc8c4$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$c76e993e57efc8c4$var$getLayoutForStride","anchorX","anchorY","k","$14c6e714516e527b$export$bb628a54ab399bc9","$14c6e714516e527b$export$dcdf75081b88279d","$14c6e714516e527b$export$d73ee8ef04f5226a","$50db89a00eb954f6$exports","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","ends","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8780aae6970f5f65$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","simplifiedEnds","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","opt_coordinatess","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$548636579b4087f2$var$__extends","getArea","$c76e993e57efc8c4$exports","$6eced4c969949f6b$var$Point","Point","$6eced4c969949f6b$var$__extends","$6b086aa46281540d$export$60815ead40ec79ab","$6eced4c969949f6b$export$2e2bcd8739ae039","$239aa88e7a573859$export$cedabedc7ac0e138","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","ret","$3e64078bffae1cbd$export$4b80e395e36b5a56","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$a6a5a7a461419425","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$155dc783a4ec227e$export$741858880c96b18c","tmp","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$7892dc06ffd23218$export$b71b604ddfc778c7","$40aa8d43bbe572bf$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$6eced4c969949f6b$exports","getLinearRingCount","getLinearRing","$548636579b4087f2$exports","getLinearRings","linearRings","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","getRadius","startAngle","$70364d0195659942$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$70364d0195659942$var$__extends","resolutionConstraintInfo","$70364d0195659942$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","padding","minZoom_","centerConstraint","$70364d0195659942$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$70364d0195659942$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$70364d0195659942$export$ee75376562060184","setHint","updateAnimations_","$70364d0195659942$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","$9c4744460e43e41b$export$96bfd09e2cffb006","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$70364d0195659942$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$40aa8d43bbe572bf$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$bac43a1f4a628548$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$bac43a1f4a628548$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$70364d0195659942$export$2e2bcd8739ae039","$cc435a5409103773$export$622c471beb1693c7","$cc435a5409103773$export$a71a825ff42fb8e1","$cceb59c4bc2a46b0$var$removeLayerMapProperty","$0b703156bb914e6f$exports","$cceb59c4bc2a46b0$var$setLayerMapProperty","$cceb59c4bc2a46b0$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$70364d0195659942$exports","$cceb59c4bc2a46b0$var$createOptionsInternal","renderComplete_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$4c51fd53052a6bbc$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$6085d006f9d0efe2$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control","target_","$b978dafe8f7d27ff$var$__extends","mapEvent","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$b978dafe8f7d27ff$exports","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","$39210df8527e63e5$export$4c486572e961a974","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction","setActive","$39210df8527e63e5$var$__extends","active","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$39210df8527e63e5$exports","zoomByDelta","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$cf1eb502962d87a8$var$isPointerDraggingEvent","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","$edf87b50170125f7$export$fdc892d0d8fe3bfb","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$c11585da26a016db$var$DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$c11585da26a016db$var$__extends","centroid","$cf1eb502962d87a8$exports","update","$1bd0a226f9a16141$export$dcdf75081b88279d","begin","getDistance","getAngle","centerpx","$c11585da26a016db$export$2e2bcd8739ae039","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate","lastAngle_","$197c7092261b2aa0$var$__extends","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$c47adf75308683a6$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox","box_","$c47adf75308683a6$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom","out_","out","$afc7f51010a5b660$var$__extends","$e05f414bc3918235$exports","$82662515908d12f9$export$2e2bcd8739ae039","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom","$2237fabfa170eefc$var$__extends","charCode","charCodeAt","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map","$4901e3e27e30416a$exports","zoomOptions","$a305cff1f91b3b86$exports","rotateOptions","attribution","$6a26ab11104d2c24$exports","attributionOptions","$b4471d80e1d69273$export$ebe90cb607ad99e","altShiftDragRotate","$197c7092261b2aa0$exports","doubleClickZoom","$b50403621294a654$exports","zoomDelta","zoomDuration","dragPan","$c11585da26a016db$exports","pinchRotate","$9727451f2459496c$exports","pinchZoom","$79c946b60b88d4a6$exports","keyboard","$178bb1517d626802$exports","$2237fabfa170eefc$exports","mouseWheelZoom","$aaa378764710d71e$exports","shiftDragZoom","$afc7f51010a5b660$exports","$fdc8b40501c0cf45$export$ebe90cb607ad99e","$41aa29ae0c4b607a$var$__extends","$fa78c97693b12120$exports","$cceb59c4bc2a46b0$exports","$e4c61536de922b84$export$2e2bcd8739ae039","$93be2de6a052f587$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$93be2de6a052f587$var$__extends","getPreload","getUseInterimTilesOnError","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$42152f52b26b6ca7$var$pixelContext","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$42152f52b26b6ca7$var$__extends","getImageData","col","row","clearRect","drawImage","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelContext","pixelCanvas","Uint8Array","$cb18cdefd702a327$exports","$0f235d2d04095c6e$export$2e2bcd8739ae039","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","$0f235d2d04095c6e$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase","$5edd00bd92be9cf8$var$__extends","getImage","getPixelRatio","$b54439be79d4619a$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","listening","decoding","loaded","catch","$b54439be79d4619a$export$2e2bcd8739ae039","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$b54439be79d4619a$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$5edd00bd92be9cf8$exports","$cd3bc8d185522361$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$cd3bc8d185522361$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$b54439be79d4619a$exports","listenImage","$0f235d2d04095c6e$exports","$2b0a118af78fb031$var$brokenDiagonalRendering_","$6be53f6edfbf1854$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$fa21ebc07613627d$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$fa21ebc07613627d$export$75f39f0ce198f93f","$2b0a118af78fb031$var$drawTestTriangle","u1","v1","u2","v2","closePath","restore","$2b0a118af78fb031$var$verifyBrokenDiagonalRendering","$2b0a118af78fb031$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$2b0a118af78fb031$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$6b000a049d919fe5$export$8240f01c446270e6","$2b0a118af78fb031$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$398e350e33050c07$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$2b0a118af78fb031$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$398e350e33050c07$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$550e524b0d1b61d4$var$TileRange","TileRange","containsTileRange","equals","getHeight","getWidth","intersects","$550e524b0d1b61d4$export$958e3e1a02eac4b6","$550e524b0d1b61d4$export$2e2bcd8739ae039","$02fffef185f4339b$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$02fffef185f4339b$var$__extends","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","$cd3bc8d185522361$exports","$398e350e33050c07$exports","tileOrigin","getOrigin","tileSize","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","$ce07df6d5d4656f1$export$52ec625a6a53b6a6","getTileImage","alpha","alphaChanged","globalAlpha","frameState1","tileSource1","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$42152f52b26b6ca7$exports","$02fffef185f4339b$export$2e2bcd8739ae039","$32e67a4d3559554a$export$2e2bcd8739ae039","TileLayer","$32e67a4d3559554a$var$__extends","$02fffef185f4339b$exports","$93be2de6a052f587$exports","$351df830ee0a9d9c$export$2e2bcd8739ae039","BaseImageLayer","$351df830ee0a9d9c$var$__extends","$d08a3a38b8c630d8$var$CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","$d08a3a38b8c630d8$var$__extends","imageSource","renderedExtent","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imagePixelRatio","size_1","clipped","dw","dh","previousAlpha","$d08a3a38b8c630d8$export$2e2bcd8739ae039","$14618f63634d34fc$export$2e2bcd8739ae039","ImageLayer","$14618f63634d34fc$var$__extends","$d08a3a38b8c630d8$exports","$351df830ee0a9d9c$exports","$859b1614288c6316$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$bf2a04496fadabc6$export$958e3e1a02eac4b6","opt_tileCoord","$bf2a04496fadabc6$export$92d0df0f1d25c63c","$bf2a04496fadabc6$export$a47fb462a08de82f","$a12e09565a34db59$export$2e2bcd8739ae039","TileCache","$a12e09565a34db59$var$__extends","pruneExceptNewestZ","$bf2a04496fadabc6$export$a807b7874eb66454","$7e3d7a0f8b272861$export$2e2bcd8739ae039","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$ed6dc99f268f3882$var$__extends","refresh","setAttributions","$bb602a307ef98bb5$var$tmpTileCoord","$bb602a307ef98bb5$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","fullTileRanges","$bb602a307ef98bb5$export$2e2bcd8739ae039","$5779655d81caea04$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$5779655d81caea04$var$resolutionsFromExtent","$5779655d81caea04$export$ce88871416242df8","$5779655d81caea04$export$7b5b6ef8fd55fac4","$5779655d81caea04$export$a251b12f5601c16f","opt_maxResolution","half","$988a11d09320f6a8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$a12e09565a34db59$exports","tmpSize","tileOptions","$988a11d09320f6a8$var$__extends","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$5779655d81caea04$export$39a9ce3624977b84","$bf2a04496fadabc6$export$60bedf8e3e3c3dbe","$ed6dc99f268f3882$exports","$988a11d09320f6a8$export$c571855c51e6c4b6","$988a11d09320f6a8$export$2e2bcd8739ae039","$91dd08a0f5859882$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$91dd08a0f5859882$export$436f44dbcc31fea3","templates","tileUrlFunctions","$bf2a04496fadabc6$export$d6af199866bfb566","$91dd08a0f5859882$export$4229b1d9af69b3be","$e6408236331c2614$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$e6408236331c2614$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$988a11d09320f6a8$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$91dd08a0f5859882$export$2a1fa079bfd73dde","$51d055913ca55b5e$var$TileImage","TileImage","imageSmoothing","$51d055913ca55b5e$var$defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$51d055913ca55b5e$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$e6408236331c2614$exports","imageTile","$51d055913ca55b5e$export$2e2bcd8739ae039","$963a7ef65488964c$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$5779655d81caea04$export$38500bbeccc864ff","$963a7ef65488964c$var$__extends","$51d055913ca55b5e$exports","$6c8498cc816f2362$export$4de8a5e77eb994ad","$6c8498cc816f2362$export$2e2bcd8739ae039","OSM","$6c8498cc816f2362$var$__extends","$963a7ef65488964c$exports","$22666d8766dd8ace$export$2e2bcd8739ae039","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","$22666d8766dd8ace$var$__extends","unlistenSource_","sourceState1","$ff537d321d4e1584$export$4e0f6da20e5dcc4f","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","$ff537d321d4e1584$export$58d3276cd83daede","$ff537d321d4e1584$var$__extends","$ff537d321d4e1584$export$584f102f75ff44b3","$ff537d321d4e1584$export$2e2bcd8739ae039","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","idx","resolution1","$22666d8766dd8ace$exports","getImageInternal","handleImageChange","$3756c58836984030$export$2e2bcd8739ae039","$60db182c0252e220$export$c202e3cb8db99a95","uri","params","keyParams","encodeURIComponent","qs","$481c7fd2f8a9fd17$var$GETFEATUREINFO_IMAGE_SIZE","$481c7fd2f8a9fd17$var$ImageWMS","ImageWMS","url_","$ff537d321d4e1584$exports","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","serverType","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","$481c7fd2f8a9fd17$var$__extends","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getLegendUrl","LAYERS","mpu","getParams","viewExtent","requestExtent","getImageLoadFunction","dpi","bbox","getUrl","setImageLoadFunction","updateParams","version","s1","s2","n1","n2","$ff7180bdd45ebb19$export$66e1c0999abad646","$481c7fd2f8a9fd17$export$2e2bcd8739ae039","$dad545c909cfec2d$var$osmLayer","$32e67a4d3559554a$exports","$6c8498cc816f2362$exports","$dad545c909cfec2d$var$countriesLayer","$14618f63634d34fc$exports","$481c7fd2f8a9fd17$exports","location","protocol","host","$dad545c909cfec2d$var$map","$41aa29ae0c4b607a$exports","INFO_FORMAT","fetch","response","html","$dad545c909cfec2d$var$openNav","getElementsByClassName"],"version":3,"file":"index.f83ab97d.js.map"}